git常用命令汇总

	Git全局设置
	$ git config --global user.name  "账户名称"	//引号内容为用户名称（英文名）
	$ git config --global user.email "邮箱地址"	//引号内容为登陆远端使用的邮箱
	$ git config --global credential.helper store	//本地记住账户

	一、推送本地新项目到远程仓库
	
		$ cd C:\Users\T5\ASProjects\test	//切换到本地项目test目录下
		$ git init	//git初始化项目
		$ git remote add origin git@github.com:Tom/test.git	//远程git地址(提前在远端创建好)
		$ git pull origin master	//拉取远端仓库文件到本地
		$ git add .	//添加项目下所有需要提交的文件到缓存区
		$ git commit -m "first init"	//提交（引号内容为本次提交描述）
		$ git push -u origin master	//推送到远程master分支
		
	二、本地仓库修改Git远程仓库地址	
		
		$ git remote -v //查看本地已经存在的远程仓库名称和地址地址
		$ git remote set-url origin git@github.com:Tom/test2.git	//修改远程仓库origin的地址为git@github.com:Tom/test2.git（提前在远端创建好）
		
	三、本地项目添加多个Git远程仓库	
		
		1.方法一：
		$ git remote add github git@github.com:Tom/test3.git	//添加一个远程库 名字不能是origin
		$ git remote -v	//查看本地已经存在的远程仓库名称和地址地址
		$ git pull github master	//从远程仓库github拉取
		$ git push github master	//推送到远程仓库github

		2.方法二：
		$ git remote set-url --add origin git@github.com:Tom/test4.git	//为本地仓库添加新的远程仓库地址
		$ git remote -v	//查看本地已经存在的远程仓库名称和地址地址
		$ git push origin master	//推送到远程master分支

	四、合并分支

	    $ git checkout master   //切换到master分支
	    $ git merge hotfix  //合并hotfix分支到master分支

	五、其他

        $ git merge hotfix  //合并分支
		$ git remote rm origin	//删除本地仓库当前关联的远程仓库
		$ git log	//查看提交历史
		$ git status	//查看有多少次 提交了 没有push到版本库
		$ git cherry -v	//查看已经提交 但是未传送到远程代码库的提交描述/说明
		$ git log master ^origin/master	//查看已经提交但是未传送到远程代码库的提交详情（可能不止一次）
		$ git branch  //查看本地分支
		$ git branch -a   //查看远程分支
		$ git checkout -b 本地分支 origin/远程分支  //切换分支
		$ git branch -d bug_xzx	//删除本地的bug_xzx分支
		$ git push origin --delete bug_xzx	//删除远程的bug_xzx分支
		$ git branch --set-upstream-to=origin/远程分支  //本地关联远程分支

	六、修改分支名称(假设分支名称为 oldName 想要修改为 newName)

	    1.本地分支重命名(还没有推送到远程)
	    $ git branch -m oldName newName

	    2.远程分支重命名(如果修改远程分支，只需要将本地分支重命名为新分支名称，然后删除远程分支，再把本地分支上传就可以了)
	        a.重命名远程分支对应的本地分支
	        $ git branch -m oldName newName
	        b.删除远程分支
	        $ git push --delete origin oldName
	        c.上传新命名的本地分支
	        $ git push origin newName
	        d.把修改后的本地分支与远程分支关联
	        $ git branch --set-upstream-to origin/newName


		
    七、获取签名信息

        1.根据签名文件获取
        $ keytool -list -v -keystore *.jks签名文件路径 //获取签名信息

        2.根据签名apk获取
        $ keytool -printcert -jarfile *.apk文件路径 //获取签名信息

        3.根据*.RSA文件获取(将*.apk文件改成*.zip后，解压，获取到META-INF/*.RSA文件。)
        $ keytool -printcert -file *.RSA //获取签名信息